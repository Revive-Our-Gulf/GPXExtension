#--------------------------------------------------------
# Top-Level: StatusTool
#
# @author: Wild Boar
#
# @Date Created: 2024-07-26
#--------------------------------------------------------

cmake_minimum_required(VERSION 3.5.0)
project(StatusTool VERSION 0.1.0)

# Set the base path of the libraries
set(LIBRARY_BASE "/Libraries")

# Set the C++ standard
set(CMAKE_CXX_STANDARD 17)

# Add OpenCV to the solution
find_package( OpenCV REQUIRED )
include_directories( ${OpenCV_INCLUDE_DIRS} )

# Include OpenSSL
find_package(OpenSSL REQUIRED)

# Add the NVLib library to the folder
add_library(NVLib STATIC IMPORTED)
set_target_properties(NVLib PROPERTIES
    IMPORTED_LOCATION "${LIBRARY_BASE}/NVLib/build/NVLib/libNVLib.a"
    INTERFACE_INCLUDE_DIRECTORIES "${LIBRARY_BASE}/NVLib"
)

# Include Crow
find_package(Crow)

# Add the MariaDB connector
include_directories("/usr/include/mariadb")
add_library(mariadbcpp STATIC IMPORTED)
set_property(TARGET mariadbcpp PROPERTY IMPORTED_LOCATION "/usr/lib/libmariadbcpp.so")

# Create the executable
add_executable(StatusTool
    Source.cpp
    Repository.cpp
    GPXMaker.cpp
    Settings.cpp
    QueryPage.cpp
    Home.cpp
)

# Add link libraries                               
target_link_libraries(StatusTool NVLib ${OpenCV_LIBS} mariadbcpp Crow::Crow OpenSSL::SSL uuid)

# Copy Resources across
add_custom_target(resource_copy ALL
	COMMAND cmake -E copy_directory ${CMAKE_SOURCE_DIR}/templates ${CMAKE_BINARY_DIR}/templates
    DEPENDS ${MY_TARGET}
)

# Copy Config across
add_custom_target(config_copy ALL
	COMMAND cmake -E copy_directory ${CMAKE_SOURCE_DIR}/config ${CMAKE_BINARY_DIR}
    DEPENDS ${MY_TARGET}
)

# Copy Static files across
add_custom_target(static_copy ALL
    COMMAND cmake -E copy_directory ${CMAKE_SOURCE_DIR}/static ${CMAKE_BINARY_DIR}/static
    DEPENDS ${MY_TARGET}
)